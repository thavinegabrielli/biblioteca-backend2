{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "Biblioteca",
    "description": "Implementação do Swagger à API"
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Servidor Local"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Rota padrão para teste de API",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/novo/aluno": {
      "post": {
        "tags": ["Aluno"],
        "summary": "Cadastrar novo aluno",
        "description": "Esta rota recebe informações de um aluno para cadastrar no banco de dados.",
        "operationId": "cadastrarAluno",
        "security": [
          { "apiKeyAuth": [] }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": { "type": "string", "example": "Samuel" },
                  "sobrenome": { "type": "string", "example": "Viana" },
                  "dataNascimento": { "type": "string", "format": "date", "example": "1995-01-26" },
                  "endereco": { "type": "string", "example": "Parque Leblon, 478" },
                  "email": { "type": "string", "format": "email", "example": "samuel.caua.viana@facebook.com" },
                  "celular": { "type": "string", "example": "85996712239" }
                },
                "required": ["nome", "sobrenome", "dataNascimento", "endereco", "email", "celular"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Aluno cadastrado com sucesso" },
          "400": { "description": "Não foi possível cadastrar o aluno" }
        }
      }
    },
    "/atualizar/aluno": {
      "put": {
        "tags": ["Aluno"],
        "summary": "Atualizar dados de um aluno",
        "description": "Atualiza os dados de um aluno existente.",
        "operationId": "atualizarAluno",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer", "example": 5 },
                  "nome": { "type": "string", "example": "Juliana" },
                  "sobrenome": { "type": "string", "example": "Coimbra" },
                  "dataNascimento": { "type": "string", "format": "date", "example": "2005-09-09" },
                  "endereco": { "type": "string", "example": "Rua Joaquim Antônio Teixeira, 68" },
                  "email": { "type": "string", "format": "email", "example": "juliana.scoimbra@estadao.com.br" },
                  "celular": { "type": "string", "example": "64987598648" }
                },
                "required": ["id", "nome", "sobrenome", "dataNascimento", "endereco", "email", "celular"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Aluno atualizado com sucesso" },
          "400": { "description": "Erro ao atualizar o aluno" }
        }
      }
    },
    "/remover/aluno": {
      "delete": {
        "tags": ["Aluno"],
        "summary": "Remover um aluno",
        "description": "Remove um aluno com base no ID informado.",
        "operationId": "removerAluno",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "idAluno",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "example": 21 }
          }
        ],
        "responses": {
          "200": { "description": "Aluno removido com sucesso" },
          "400": { "description": "Erro ao remover o aluno" }
        }
      }
    },
    "/novo/livro": {
      "post": {
        "tags": ["Livro"],
        "summary": "Cadastrar novo livro",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": { "type": "string", "example": "O Senhor dos Anéis" },
                  "autor": { "type": "string", "example": "J.R.R. Tolkien" },
                  "editora": { "type": "string", "example": "HarperCollins" },
                  "anoPublicacao": { "type": "string", "example": "1954" },
                  "isbn": { "type": "string", "example": "978-0007525546" },
                  "quantTotal": { "type": "integer", "example": 10 },
                  "quantDisponivel": { "type": "integer", "example": 10 },
                  "valorAquisicao": { "type": "number", "example": 59.90 },
                  "statusLivroEmprestado": { "type": "boolean", "example": false }
                },
                "required": ["titulo", "autor", "editora", "anoPublicacao", "isbn", "quantTotal", "quantDisponivel", "valorAquisicao", "statusLivroEmprestado"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Livro cadastrado com sucesso" },
          "400": { "description": "Erro ao cadastrar o livro" }
        }
      }
    },
    "/atualizar/livro": {
      "put": {
        "tags": ["Livro"],
        "summary": "Atualizar dados de um livro",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "idLivro",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "example": 26 }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": { "type": "string", "example": "O Senhor dos Anéis - Edição Revisada" },
                  "autor": { "type": "string", "example": "J.R.R. Tolkien" },
                  "editora": { "type": "string", "example": "HarperCollins" },
                  "anoPublicacao": { "type": "string", "example": "1954" },
                  "isbn": { "type": "string", "example": "978-0007525546" },
                  "quantTotal": { "type": "integer", "example": 12 },
                  "quantDisponivel": { "type": "integer", "example": 12 },
                  "valorAquisicao": { "type": "number", "example": 69.90 },
                  "statusLivroEmprestado": { "type": "boolean", "example": false }
                },
                "required": ["titulo", "autor", "editora", "anoPublicacao", "isbn", "quantTotal", "quantDisponivel", "valorAquisicao", "statusLivroEmprestado"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Livro atualizado com sucesso" },
          "400": { "description": "Erro ao atualizar o livro" }
        }
      }
    },
    "/remover/livro": {
      "delete": {
        "tags": ["Livro"],
        "summary": "Remover um livro",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "idLivro",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "example": 26 }
          }
        ],
        "responses": {
          "200": { "description": "Livro removido com sucesso" },
          "400": { "description": "Erro ao remover o livro" }
        }
      }
    },
    "/novo/emprestimo": {
      "post": {
        "tags": ["Empréstimo"],
        "summary": "Cadastrar novo empréstimo",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idAluno": { "type": "integer", "example": 21 },
                  "idLivro": { "type": "integer", "example": 21 },
                  "dataEmprestimo": { "type": "string", "format": "date", "example": "2025-03-08" },
                  "dataDevolucao": { "type": "string", "format": "date", "example": "2025-03-15" },
                  "statusEmprestimo": { "type": "string", "example": "Em andamento" }
                },
                "required": ["idAluno", "idLivro", "dataEmprestimo", "dataDevolucao", "statusEmprestimo"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Empréstimo cadastrado com sucesso" },
          "400": { "description": "Erro ao cadastrar o empréstimo" }
        }
      }
    },
    "/atualizar/emprestimo": {
      "put": {
        "tags": ["Empréstimo"],
        "summary": "Atualizar dados de um empréstimo",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "idEmprestimo",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "example": 29 }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idAluno": { "type": "integer", "example": 21 },
                  "idLivro": { "type": "integer", "example": 21 },
                  "dataEmprestimo": { "type": "string", "format": "date", "example": "2025-03-08" },
                  "dataDevolucao": { "type": "string", "format": "date", "example": "2025-03-15" },
                  "statusEmprestimo": { "type": "string", "example": "Concluído" }
                },
                "required": ["idAluno", "idLivro", "dataEmprestimo", "dataDevolucao", "statusEmprestimo"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Empréstimo atualizado com sucesso" },
          "400": { "description": "Erro ao atualizar o empréstimo" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
